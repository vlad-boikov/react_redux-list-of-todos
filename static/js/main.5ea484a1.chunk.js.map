{"version":3,"sources":["types/FilterType.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","actions","todo","type","payload","currentTodoReducer","state","action","initialFilter","query","status","filterReducer","filter","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","loading","isLoading","dispatch","visibleTodos","statusFiltered","active","completed","title","toLocaleLowerCase","includes","trim","getVisibleTodos","className","map","classNames","id","onClick","currentTodoActions","TodoFilter","value","onChange","e","filterActions","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setIsLoading","hasError","setHasError","result","todosActions","catch","finally","color","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ea484a1.chunk.js","sourcesContent":["export enum FilterType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodo, removeTodo };\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = { type: 'filter/SET_QUARY', payload: string };\ntype SetStatusAction = { type: 'filter/SET_STATUS', payload: Status };\ntype Action = SetQueryAction | SetStatusAction;\ntype Filter = { query: string, status: string };\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUARY',\n  payload: query,\n});\n\nconst initialFilter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (filter: Filter = initialFilter, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_QUARY':\n      return { ...filter, query: action.payload };\n\n    case 'filter/SET_STATUS':\n      return { ...filter, status: action.payload };\n    default:\n      return filter;\n  }\n};\n\nexport const actions = { setQuery, setStatus };\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport const actions = { setTodos };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { FilterType } from '../../types/FilterType';\n\ntype Props = {\n  isLoading: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  isLoading: loading,\n}) => {\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const getVisibleTodos = () => {\n    let statusFiltered;\n\n    switch (filter.status) {\n      case FilterType.active:\n        statusFiltered = todos.filter(todo => !todo.completed);\n        break;\n\n      case FilterType.completed:\n        statusFiltered = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        statusFiltered = todos;\n    }\n\n    return statusFiltered.filter(todo => todo.title.toLocaleLowerCase().includes(filter.query.toLocaleLowerCase().trim()));\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      {!loading && (\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n      )}\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames(\n              {\n                'has-background-info-light':\n                currentTodo?.id === todo.id,\n              },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              {/* eslint-disable-next-line max-len */}\n              <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n              >\n                <span className=\"icon\">\n                  {/* eslint-disable-next-line max-len */}\n                  <i className={currentTodo?.id === todo.id ? 'far fa-eye-slash' : 'far fa-eye'} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={e => dispatch(\n              filterActions.setStatus(e.target.value as Status),\n            )}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={filter.query}\n          onChange={e => dispatch(filterActions.setQuery(e.target.value))}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {!!filter.query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.setQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  currentTodo: Todo\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  currentTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    getUser(currentTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {currentTodo.completed\n                ? (\n                  <strong\n                    className=\"has-text-success\"\n                  >\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong\n                    className=\"has-text-danger\"\n                  >\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(result => dispatch(todosActions.setTodos(result)))\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {hasError && (\n                <h3 style={{ color: 'tomato' }}>\n                  Todos loading error\n                </h3>\n              )}\n              {isLoading && <Loader />}\n              {!isLoading && !hasError && (\n                <TodoList\n                  isLoading={isLoading}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && (\n        <TodoModal\n          currentTodo={currentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}